groovyscript.command.copy.hover=Click to copy
groovyscript.command.copy.copied_start=Copied [
groovyscript.command.copy.copied_end=] to the clipboard

key.categories.groovyscript=GroovyScript
key.groovyscript.reload=Reload Scripts

# Wiki
groovyscript.wiki.categories=Categories
groovyscript.wiki.subcategories_count=Has %s subcategories.
groovyscript.wiki.description=Description
groovyscript.wiki.identifier=Identifier
groovyscript.wiki.defaultPackage=This identifier will be used as the default for examples on this page
groovyscript.wiki.import_instructions=Refer to this via any of the following:
groovyscript.wiki.editing_values=Editing Values
groovyscript.wiki.adding_recipes=Adding Recipes
groovyscript.wiki.adding_entries=Adding Entries
groovyscript.wiki.removing_recipes=Removing Recipes
groovyscript.wiki.removing_entries=Removing Entries
groovyscript.wiki.query_recipes=Getting all recipes
groovyscript.wiki.query_entries=Getting all entries
groovyscript.wiki.recipe_builder=Recipe Builder
groovyscript.wiki.uses_recipe_builder=Just like other recipe types, the %s also uses a recipe builder.
groovyscript.wiki.recipe_builder_note=Don't know what a builder is? Check [the builder info page](../../../groovy/builder.md) out.
groovyscript.wiki.required_mods.title=Required Mods
groovyscript.wiki.required_mods.desc=This compat requires the following mods to be loaded
groovyscript.wiki.not_fully_documented=This compat is not fully documented. Some or all of its features are not present on the wiki. View the source code to gain an accurate understanding of the compat.

groovyscript.wiki.requires=Requires %s.
groovyscript.wiki.default=(Default `%s`).

# General
groovyscript.wiki.name.value=Sets the Resource Location of the recipe
groovyscript.wiki.input.value=Sets the item inputs of the recipe
groovyscript.wiki.output.value=Sets the item outputs of the recipe
groovyscript.wiki.fluidInput.value=Sets the fluid inputs of the recipe
groovyscript.wiki.fluidOutput.value=Sets the fluid outputs of the recipe
groovyscript.wiki.register=First validates the recipe, returning `null` and outputting errors to the log file if the validation failed, then registers the recipe and returns the registered object. (returns `null` or `%s`).

groovyscript.wiki.craftingrecipe.matrix.required=either the key-based matrix or the ingredient-based matrix can be defined, not both
groovyscript.wiki.craftingrecipe.output.value=Sets the item output
groovyscript.wiki.craftingrecipe.recipeFunction.value=Sets an operation that modifies the input items or output item
groovyscript.wiki.craftingrecipe.recipeAction.value=Sets an operation that happens when the recipe is crafted
groovyscript.wiki.craftingrecipe.replace.value=Sets if the recipe is removed. A value of 1 removes by the output, and a value of 2 removes by the resource location
groovyscript.wiki.craftingrecipe.mirrored.value=Sets if the recipe is horizontally mirrored
groovyscript.wiki.craftingrecipe.keyBasedMatrix.value=Sets the items required in each slot of the grid as char
groovyscript.wiki.craftingrecipe.keyMap.value=Sets the item the given char corresponds to
groovyscript.wiki.craftingrecipe.ingredientMatrix.value=Sets the items required in each slot in the grid as IIngredients
groovyscript.wiki.craftingrecipe.ingredients.value=Sets the items required for the recipe

groovyscript.wiki.removeByInput=Removes all recipes that match the given input
groovyscript.wiki.removeByOutput=Removes all recipes that match the given output
groovyscript.wiki.removeByOre=Removes all recipes that match the given ore
groovyscript.wiki.removeByCatalyst=Removes all recipes that match the given catalyst
groovyscript.wiki.removeByInputAndCatalyst=This removes all recipes that match the given input and Catalyst
groovyscript.wiki.streamRecipes=Iterates through every entry in the registry, with the ability to call remove on any element to remove it
groovyscript.wiki.removeAll=Removes all registered recipes

groovyscript.wiki.less_than=less than %s
groovyscript.wiki.less_than_or_equal_to=less than or equal to %s
groovyscript.wiki.equal_to=exactly %s
groovyscript.wiki.greater_than_or_equal_to=greater than or equal to %s
groovyscript.wiki.greater_than=greater than %s
groovyscript.wiki.not=not %s
groovyscript.wiki.and=and

# Actually Additions
groovyscript.wiki.actuallyadditions.atomicreconstructor.title=Atomic Reconstructor
groovyscript.wiki.actuallyadditions.atomicreconstructor.description=The Atomic Reconstructor is a block which uses energy to convert a block or item in front of it into other items.
groovyscript.wiki.actuallyadditions.atomicreconstructor.energyUse.value=Sets the amount of power consumed by the recipe

groovyscript.wiki.actuallyadditions.balloffur.title=Ball of Fur
groovyscript.wiki.actuallyadditions.balloffur.description=A weighted itemstack output for using a Ball of Fur, dropped by a cat.
groovyscript.wiki.actuallyadditions.balloffur.weight.value=Sets how likely this entry is to be rolled

groovyscript.wiki.actuallyadditions.compost.title=Compost
groovyscript.wiki.actuallyadditions.compost.description=Converts an input item into an output item after 150 seconds. Requires an input and output display blockstate.
groovyscript.wiki.actuallyadditions.compost.inputDisplay.value=Sets the texture rendering inside the Compost Bin in-world while the given recipe is being processed
groovyscript.wiki.actuallyadditions.compost.outputDisplay.value=Sets the texture rendering inside the Compost Bin in-world while the given recipe has been completed but has not yet been extracted

groovyscript.wiki.actuallyadditions.crusher.title=Crusher
groovyscript.wiki.actuallyadditions.crusher.description=Converts an input itemstack into an output itemstack with a chance of a second itemstack.
groovyscript.wiki.actuallyadditions.crusher.chance.value=Sets the chance for the second output entry to be output

groovyscript.wiki.actuallyadditions.empowerer.title=Empowerer
groovyscript.wiki.actuallyadditions.empowerer.description=Turns 5 input items into an output item at the cost of power and time. Has a configurable color.
groovyscript.wiki.actuallyadditions.empowerer.mainInput.value=Sets the center IIngredient if the input only has 4 entries
groovyscript.wiki.actuallyadditions.empowerer.energyPerStand.value=Sets the amount of energy each stand must consume to process the recipe
groovyscript.wiki.actuallyadditions.empowerer.time.value=Sets the amount of time the recipe takes to complete
groovyscript.wiki.actuallyadditions.empowerer.red.value=Sets the red color
groovyscript.wiki.actuallyadditions.empowerer.blue.value=Sets the blue color
groovyscript.wiki.actuallyadditions.empowerer.green.value=Sets the green color
groovyscript.wiki.actuallyadditions.empowerer.mainInput.required=either defined in mainInput or in input

groovyscript.wiki.actuallyadditions.nethermininglens.title=Nether Mining Lens
groovyscript.wiki.actuallyadditions.nethermininglens.description=A weighted oredict for the block obtained via firing a Mining Lens at a block of Netherrack. The oredict must have a block, or the world will hang.
groovyscript.wiki.actuallyadditions.nethermininglens.ore.value=Sets the ore given by the recipe
groovyscript.wiki.actuallyadditions.nethermininglens.weight.value=Sets how likely this ore is to be rolled

groovyscript.wiki.actuallyadditions.oilgen.title=Oil Gen
groovyscript.wiki.actuallyadditions.oilgen.description=Turns a fluid into power at a rate.
groovyscript.wiki.actuallyadditions.oilgen.amount.value=Sets how much power is generated per tick while fluid is being consumed
groovyscript.wiki.actuallyadditions.oilgen.time.value=Sets how long the fluid burns for

groovyscript.wiki.actuallyadditions.stonemininglens.title=Stone Mining Lens
groovyscript.wiki.actuallyadditions.stonemininglens.description=A weighted oredict for the block obtained via firing a Mining Lens at a block of Stone. The oredict must have a block, or the world will hang.
groovyscript.wiki.actuallyadditions.stonemininglens.ore.value=Sets the ore given by the recipe
groovyscript.wiki.actuallyadditions.stonemininglens.weight.value=Sets how likely this ore is to be rolled

groovyscript.wiki.actuallyadditions.treasurechest.title=Treasure Chest
groovyscript.wiki.actuallyadditions.treasurechest.description=A weighted item, with a weight to obtain and a minimum and maximum amount. Obtained via right-clicking a Treasure Chest spawning randomly on the sea floor.
groovyscript.wiki.actuallyadditions.treasurechest.weight.value=Sets how likely this loot is to be rolled
groovyscript.wiki.actuallyadditions.treasurechest.min.value=Sets the minimum stack size given when rolled
groovyscript.wiki.actuallyadditions.treasurechest.max.value=Sets the maximum stack size given when rolled



# Blood Magic
groovyscript.wiki.bloodmagic.alchemyarray.title=Alchemy Array
groovyscript.wiki.bloodmagic.alchemyarray.description=Converts two items into an output itemstack by using Arcane Ashes in-world. Has a configurable texture for the animation.
groovyscript.wiki.bloodmagic.alchemyarray.add0=Adds recipes in the format `input`, `catalyst`, `output`, `circleTexture`
groovyscript.wiki.bloodmagic.alchemyarray.add1=Adds recipes in the format `input`, `catalyst`, `output`, optional `circleTexture`
groovyscript.wiki.bloodmagic.alchemyarray.catalyst.value=Sets the catalyst
groovyscript.wiki.bloodmagic.alchemyarray.texture.value=Sets the animation texture

groovyscript.wiki.bloodmagic.alchemytable.title=Alchemy Table
groovyscript.wiki.bloodmagic.alchemytable.description=Converts up to 6 input items into an output itemstack, with configurable time, minimum tier of Blood Orb required, and Life Essence drained from the Orb network.
groovyscript.wiki.bloodmagic.alchemytable.note0=Tier 6 must be enabled in the config to use an Orb of that tier in the Alchemy Table.
groovyscript.wiki.bloodmagic.alchemytable.add=Adds recipes in the format `input`, `output`, `syphon`, `ticks`, `minimumTier`
groovyscript.wiki.bloodmagic.alchemytable.syphon.value=Sets how much Life Essence is drained from the Blood Network
groovyscript.wiki.bloodmagic.alchemytable.ticks.value=Sets how long in ticks the recipe should take
groovyscript.wiki.bloodmagic.alchemytable.minimumTier.value=Sets the minimum tier the Blood Orb inside the table must be

groovyscript.wiki.bloodmagic.bloodaltar.title=Blood Altar
groovyscript.wiki.bloodmagic.bloodaltar.description=Converts an input item into an output itemstack, draining life essence from the altar at a base rate and requiring at least a specific tier.
groovyscript.wiki.bloodmagic.bloodaltar.note0=The Blood Altar consumes Life Essence from its internal tank to convert the input item into the output item. Each tier requires a larger multiblock, which may contain Runes that modify the Blood Altar's functionality.
groovyscript.wiki.bloodmagic.bloodaltar.note1=Tier 6 must be enabled in the config to use a Blood Altar of that tier.
groovyscript.wiki.bloodmagic.bloodaltar.add=Adds recipes in the format `input`, `output`, `minimumTier`, `syphon`, `consumeRate`, `drainRate`
groovyscript.wiki.bloodmagic.bloodaltar.minimumTier.value=Sets the minimum tier required from the altar
groovyscript.wiki.bloodmagic.bloodaltar.syphon.value=Sets how much Life Essence in total is required
groovyscript.wiki.bloodmagic.bloodaltar.consumeRate.value=Sets how much Life Essence the Blood Altar can consume per tick for this recipe
groovyscript.wiki.bloodmagic.bloodaltar.drainRate.value=Sets how much Life Essence the recipe looses per tick when the recipe cannot consume Life Essence

groovyscript.wiki.bloodmagic.meteor.title=Meteor
groovyscript.wiki.bloodmagic.meteor.description=Throwing an input catalyst atop an activated Mark of the Falling Tower Ritual will spawn a meteor made of the given components, size, explosion strength, and Life Essence cost.
groovyscript.wiki.bloodmagic.meteor.add=Adds recipes in the format `catalyst`, `componentList`, `explosionStrength`, `radius`, `cost`
groovyscript.wiki.bloodmagic.meteor.components.value=Sets the blocks that make up the meteor, and what weight each block has to generate
groovyscript.wiki.bloodmagic.meteor.catalyst.value=Sets the catalyst that must be thrown atop the Master Ritual Stone to spawn the meteor
groovyscript.wiki.bloodmagic.meteor.explosionStrength.value=Sets the strength of the explosion caused when the meteor is spawned
groovyscript.wiki.bloodmagic.meteor.radius.value=Sets the radius of the meteor
groovyscript.wiki.bloodmagic.meteor.cost.value=Sets the amount of Life Essence drained from the Blood Network to spawn the meteor
groovyscript.wiki.bloodmagic.meteor.components.required=components with corresponding weight that make up the meteor

groovyscript.wiki.bloodmagic.sacrificial.title=Sacrificial
groovyscript.wiki.bloodmagic.sacrificial.description=How much Life Essence is gained when using the Sacrificial Dagger on a mob.
groovyscript.wiki.bloodmagic.sacrificial.add=Adds recipes in the format `entity`, `value`
groovyscript.wiki.bloodmagic.sacrificial.remove0=Removes any Sacrificial values entry with the given ResourceLocation
groovyscript.wiki.bloodmagic.sacrificial.remove1=Removes any Sacrificial values entry with the given String as a ResourceLocation
groovyscript.wiki.bloodmagic.sacrificial.remove2=Removes any Sacrificial values entry with the given Entity as a ResourceLocation
groovyscript.wiki.bloodmagic.sacrificial.remove3=Removes any Sacrificial values entry with the given EntityEntry as a ResourceLocation
groovyscript.wiki.bloodmagic.sacrificial.entity.value=Sets the target entity
groovyscript.wiki.bloodmagic.sacrificial.value.value=Sets how much Life Essence the entity gives

groovyscript.wiki.bloodmagic.tartaricforge.title=Tartaric Forge
groovyscript.wiki.bloodmagic.tartaricforge.description=Converts up to 4 input items into an output itemstack, requiring a Tartaric gem with a minimum amount of souls, and consuming some.
groovyscript.wiki.bloodmagic.tartaricforge.add=Adds recipes in the format `input`, `output`, `minimumSouls`, `soulDrain`
groovyscript.wiki.bloodmagic.tartaricforge.minimumSouls.value=Sets how much Demonic Will is required in the Tartaric Gem to start the craft
groovyscript.wiki.bloodmagic.tartaricforge.soulDrain.value=Sets how much Demonic Will is drained from the Tartaric Gem when the craft is completed

groovyscript.wiki.bloodmagic.tranquility.title=Tranquility
groovyscript.wiki.bloodmagic.tranquility.description=Blocks in the area around the Tranquility Altar provide tranquility up to the Altar's cap, with reduced effect the more of a particular type of Tranquility is provided.
groovyscript.wiki.bloodmagic.tranquility.add0=Adds recipes in the format `block`, `tranquility`, `value`
groovyscript.wiki.bloodmagic.tranquility.add1=Adds recipes in the format `block`, `tranquility`
groovyscript.wiki.bloodmagic.tranquility.add2=Adds recipes in the format `blockstate`, `tranquility`, `value`
groovyscript.wiki.bloodmagic.tranquility.add3=Adds recipes in the format `blockstate`, `tranquility`
groovyscript.wiki.bloodmagic.tranquility.remove0=Removes any Tranquility entry that matches the given Block and Tranquility type as String
groovyscript.wiki.bloodmagic.tranquility.remove1=Removes any Tranquility entry that matches the given Block and EnumTranquilityType
groovyscript.wiki.bloodmagic.tranquility.remove2=Removes any Tranquility entry that matches the given IBlockState and Tranquility as String
groovyscript.wiki.bloodmagic.tranquility.remove3=Removes any Tranquility entry that matches the given IBlockState and EnumTranquilityType
groovyscript.wiki.bloodmagic.tranquility.blockstate.value=Sets the target blockstate
groovyscript.wiki.bloodmagic.tranquility.block.value=Sets the target block
groovyscript.wiki.bloodmagic.tranquility.tranquility.value=Sets the type of Tranquility being modified
groovyscript.wiki.bloodmagic.tranquility.value.value=Sets the amount of Tranquility provided
groovyscript.wiki.bloodmagic.tranquility.block.required=either block or blockstate must be defined
groovyscript.wiki.bloodmagic.tranquility.blockstate.required=either block or blockstate must be defined

# Botania
groovyscript.wiki.botania.apothecary.title=Petal Apothecary
groovyscript.wiki.botania.apothecary.description=Converts item inputs into an item output consuming water and a seed.
groovyscript.wiki.botania.apothecary.add=Adds recipes in the format `output`, `inputs`

groovyscript.wiki.botania.brew.title=Brew Effect
groovyscript.wiki.botania.brew.description=Creates a custom brew, but not a recipe for the brew.
groovyscript.wiki.botania.brew.canInfuseBloodPendant.value=Sets if the custom brew can be infused on a Tainted Blood Pendant, making it a persistent effect at the cost of mana
groovyscript.wiki.botania.brew.effects.value=Sets the potion effects, quantity, and duration of each when consuming the potion
groovyscript.wiki.botania.brew.cost.value=Sets the base mana cost to make the brew. The Tainted Blood Pendant and Incense Stick recipes will cost 10 times as much mana
groovyscript.wiki.botania.brew.color.value=Sets the color of effect
groovyscript.wiki.botania.brew.name.value=Sets the name of the effect
groovyscript.wiki.botania.brew.key.value=Sets a unique key for the effect
groovyscript.wiki.botania.brew.canInfuseIncense.value=Sets if the brew can be infused on a Incense Stick, making it apply the effect persistently in a long-lasting AOE
groovyscript.wiki.botania.brew.remove=Removes the given brew matching the brew key
groovyscript.wiki.botania.brew.streamBrews=Iterates through every brew in the brew registry, with the ability to call remove on any element to remove it

groovyscript.wiki.botania.brewrecipe.title=Brew Recipe
groovyscript.wiki.botania.brewrecipe.description=Converts a non-infused Managlass Vial, Alfglass Flask, Incense Stick, or Tainted Blood Pendant into one infused to hold the given brew at the cost of item inputs and mana.
groovyscript.wiki.botania.brewrecipe.brew.value=Sets the brew the recipe is being created for

groovyscript.wiki.botania.category.title=Lexicon Category
groovyscript.wiki.botania.category.description=Category creates a new entry on the front page of the Lexica Botania.
groovyscript.wiki.botania.category.add0=Adds a Category to the Lexica Botania in the format `name`, `icon`, `priority`
groovyscript.wiki.botania.category.add1=Adds a Category to the Lexica Botania in the format `name`, `icon` and a priority of 5
groovyscript.wiki.botania.category.removeCategory=Removes a Category matching the given name

groovyscript.wiki.botania.elventrade.title=Elven Trade
groovyscript.wiki.botania.elventrade.description=Convert in any number of item inputs into an item output.
groovyscript.wiki.botania.elventrade.add=Adds recipes in the format `output`, `inputs`

groovyscript.wiki.botania.entry.title=Lexicon Entry
groovyscript.wiki.botania.entry.description=Entry creates a new entry in a given category.
groovyscript.wiki.botania.entry.setKnowledgeType=Sets the Knowledge type of the given entry in the format `entry`, `type`
groovyscript.wiki.botania.entry.add=Adds a new Lexica Botania entry to the given Category in the format `name`, `category`
groovyscript.wiki.botania.entry.pages.value=Sets the Pages attached to the Entry
groovyscript.wiki.botania.entry.name.value=Sets the unlocalized name of the Entry
groovyscript.wiki.botania.entry.icon.value=Sets the default icon of the Entry
groovyscript.wiki.botania.entry.category.value=Sets the Category the Entry is attached to
groovyscript.wiki.botania.entry.type.value=Sets the Knowledge Type required to view the Entry. Also determines the color
groovyscript.wiki.botania.entry.extraRecipes.value=Sets additional items displayed as if they were crafted by a page within the Entry
groovyscript.wiki.botania.entry.priority.value=Sets if the Entry always appears at the top of the list in a Category
groovyscript.wiki.botania.entry.removeByCategory=Removes all entries in the given Lexica Botania Category
groovyscript.wiki.botania.entry.removeEntry=Removes the given Entry from the Lexica Botania

groovyscript.wiki.botania.knowledge.title=Lexicon Knowledge
groovyscript.wiki.botania.knowledge.description=Creates a new type of knowledge that Lexica Botania entries may be gated with. Can only be created.
groovyscript.wiki.botania.knowledge.add0=Adds entries in the format `id`, `formatting`, `autoUnlock`
groovyscript.wiki.botania.knowledge.add1=Adds entries in the format `id`, `formatting`
groovyscript.wiki.botania.knowledge.streamKnowledgeTypes=Iterates through every entry in the registry

groovyscript.wiki.botania.magnet.title=Magnet
groovyscript.wiki.botania.magnet.description=Add or remove items from the magnet blacklist
groovyscript.wiki.botania.magnet.isInBlacklist=Checks if the given Block, IBlockState, or IIngredient is prevented from being interacted with by the magnet
groovyscript.wiki.botania.magnet.addToBlacklist=Adds the given Block, IBlockState, or IIngredient to the magnet blacklist
groovyscript.wiki.botania.magnet.removeFromBlacklist=Removes the given Block, IBlockState, or IIngredient from the magnet blacklist

groovyscript.wiki.botania.manainfusion.title=Mana Infusion
groovyscript.wiki.botania.manainfusion.description=Toss an item into a mana pool with an optional catalyst blockstate below the pool.
groovyscript.wiki.botania.manainfusion.note=A mana cost greater than 10,000 cannot be converted in a Diluted Mana Pools and a mana cost greater than 1,000,000 cannot be converted in a normal Mana Pool. Both the Fabulous Mana Pool and The Everlasting Guilty Pool have the same capacity as a normal Mana Pool.
groovyscript.wiki.botania.manainfusion.add=Adds recipes in the format `output`, `input`, `mana`
groovyscript.wiki.botania.manainfusion.mana.value=Sets the mana cost of converting the item
groovyscript.wiki.botania.manainfusion.catalyst.value=Sets the IBlockState required below the mana pool
groovyscript.wiki.botania.manainfusion.removeByCatalyst=Removes all recipes with the given IBlockState catalyst

groovyscript.wiki.botania.orechid.title=Orechid
groovyscript.wiki.botania.orechid.description=Converts stone blocks into one of a few ore blocks at the cost of mana.
groovyscript.wiki.botania.orechid.add=Adds recipes in the format `output`, `weight`

groovyscript.wiki.botania.orechidignem.title=Orechid Ignem
groovyscript.wiki.botania.orechidignem.description=Converts netherrack blocks into one of a few ore blocks at the cost of mana.
groovyscript.wiki.botania.orechidignem.add=Adds recipes in the format `output`, `weight`

groovyscript.wiki.botania.page.title=Lexicon Page
groovyscript.wiki.botania.page.description=Page creates a new page to be used in entries.
groovyscript.wiki.botania.page.add=Adds a page to the given LexiconEntry, in the format `entry`, `page`, `index`
groovyscript.wiki.botania.page.createTextPage=Returns a `PageText` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createLoreTextPage=Returns a `PageLoreText` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createImagePage=Returns a `PageImage` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createEntityPage=Returns a `PageEntity` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createCraftingPage=Returns a `PageCraftingRecipe` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createBrewingPage=Returns a `PageBrew` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createInfusionPage=Returns a `PageManaInfusionRecipe` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createRunePage=Returns a `PageRuneRecipe` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createPetalPage=Returns a `PagePetalRecipe` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.createElvenTradePage=Returns a `PageElvenRecipe` for use in adding to a LexiconEntry
groovyscript.wiki.botania.page.remove=Removes a page from the given LexiconEntry, in the format `entry`, `index`
groovyscript.wiki.botania.page.removeByEntry=Removes all pages from the given LexiconEntry

groovyscript.wiki.botania.puredaisy.title=Pure Daisy
groovyscript.wiki.botania.puredaisy.description=Convert a given block to another blockstate after a period of time.
groovyscript.wiki.botania.puredaisy.add0=Adds recipes in the format `output`, `input`, `time`
groovyscript.wiki.botania.puredaisy.add1=Adds recipes in the format `output`, `input`
groovyscript.wiki.botania.puredaisy.output.value=Sets the output IBlockState
groovyscript.wiki.botania.puredaisy.input.value=Sets the valid input states
groovyscript.wiki.botania.puredaisy.input.required=Must be either an IBlockState or String
groovyscript.wiki.botania.puredaisy.time.value=Sets the duration the recipe takes to complete

groovyscript.wiki.botania.runealtar.title=Rune Altar
groovyscript.wiki.botania.runealtar.description=Converts a items inputs into an item ouput at the cost of mana when a Livingrock item is thrown atop the altar and right clicked with a Wand of the Forest.
groovyscript.wiki.botania.runealtar.add=Adds recipes in the format `output`, `mana`, `inputs`
groovyscript.wiki.botania.runealtar.input.required=Input IIngredients cannot contain Botania's Livingrock Item
groovyscript.wiki.botania.runealtar.mana.value=Sets the mana cost of processing the recipe

# Chisel
groovyscript.wiki.chisel.carving.title=Carving
groovyscript.wiki.chisel.carving.description=Sets a group of items any item can be converted between freely, in world and in a GUI
groovyscript.wiki.chisel.carving.note=You cannot addVariation/removeVariation to chisel groups based on the oredict, you have to modify the oredict directly.
groovyscript.wiki.chisel.carving.setSound=Sets the sound of the Chisel Group
groovyscript.wiki.chisel.carving.addGroup=Adds a new Chisel Group with the given name
groovyscript.wiki.chisel.carving.addVariation=Adds a new Item Variation to the Chisel Group
groovyscript.wiki.chisel.carving.removeAll=Removes all Chisel Groups and Variations within each Chisel Group
groovyscript.wiki.chisel.carving.removeGroup=Removes a Chisel Group and all Item Variations with that Chisel Group
groovyscript.wiki.chisel.carving.removeVariation=Removes an Item Variation from the given Chisel Group

# Draconic Evolution
groovyscript.wiki.draconicevolution.fusion.title=Fusion
groovyscript.wiki.draconicevolution.fusion.description=Consumes items and power from up to 54 pedestals of at least a given tier pointing towards a Fusion Crafting Core containing a catalyst to produce an output item.
groovyscript.wiki.draconicevolution.fusion.catalyst.value=Sets the item used in the center Fusion Crafting Controller block
groovyscript.wiki.draconicevolution.fusion.energy.value=Sets the power required per item input
groovyscript.wiki.draconicevolution.fusion.tier.value=Sets the minimum tier of Fusion Crafting Injector

# EnderIO
groovyscript.wiki.enderio.level.value=Sets the minimum required machine tier of the recipe
groovyscript.wiki.enderio.energy.value=Sets the energy cost of the recipe

groovyscript.wiki.enderio.alloysmelter.title=Alloy Smelter
groovyscript.wiki.enderio.alloysmelter.description=Convert up to 3 itemstack inputs into an itemstack output, using energy and giving XP. Can be restricted to require a given tier of machine. Can be set to require at least SIMPLE, NORMAL, or ENHANCED tiers, or to IGNORE the tier. SIMPLE and IGNORE are effectively the same.
groovyscript.wiki.enderio.alloysmelter.xp.value=Sets the experience gained by taking the output item out of the Alloy Smelter

groovyscript.wiki.enderio.enchanter.title=Enchanter
groovyscript.wiki.enderio.enchanter.description=Convert an input itemstack, player xp, and either a written book and lapis or a custom alternative into an enchanted book.
groovyscript.wiki.enderio.enchanter.add=Adds recipes in the format `enchantment`, `input`
groovyscript.wiki.enderio.enchanter.input.value=Sets the key item to create the enchantment
groovyscript.wiki.enderio.enchanter.amount.value=Sets the amount of the input item used to create a single level of enchantment
groovyscript.wiki.enderio.enchanter.costMultiplier.value=Sets the experience cost multiplier per enchantment level created
groovyscript.wiki.enderio.enchanter.enchantment.value=Sets the enchantment applied to the output book
groovyscript.wiki.enderio.enchanter.book.value=Sets the item used in the book slot
groovyscript.wiki.enderio.enchanter.lapis.value=Sets the item used in the lapis slot
groovyscript.wiki.enderio.enchanter.remove=Removes entries by enchantment

groovyscript.wiki.enderio.fluidcoolant.title=Fluid Coolant
groovyscript.wiki.enderio.fluidcoolant.description=Create a Coolant with a given coolant rate that produces power with a Fuel while in a Combustion Generator.
groovyscript.wiki.enderio.fluidcoolant.addCoolant=Adds recipes in the format `fluid`, `degreesPerMb`
groovyscript.wiki.enderio.fluidcoolant.remove=Removes recipes matching the target fluid

groovyscript.wiki.enderio.fluidfuel.title=Fluid Fuel
groovyscript.wiki.enderio.fluidfuel.description=Create a Fuel with a given power per tick and total burn time that produces power with a Coolant while in a Combustion Generator.
groovyscript.wiki.enderio.fluidfuel.addFuel=Adds recipes in the format `fluid`, `rfPerCycle`, `totalBurnTime`
groovyscript.wiki.enderio.fluidfuel.remove=Removes recipes matching the target fluid

groovyscript.wiki.enderio.sagmill.title=Sag Mill
groovyscript.wiki.enderio.sagmill.description=Convert an input itemstack into up to 4 output itemstacks with chances, using energy. Output can be boosted by Grinding Balls based on set bonusType. Can be set to require at least SIMPLE, NORMAL, or ENHANCED tiers, or to IGNORE the tier. SIMPLE and IGNORE are effectively the same.
groovyscript.wiki.enderio.sagmill.chances.value=Sets the chance the given output of each output slot
groovyscript.wiki.enderio.sagmill.bonusType.value=Sets the type of bonus a Grinding Ball can apply

groovyscript.wiki.enderio.sagmillgrinding.title=Sag Mill Grinding
groovyscript.wiki.enderio.sagmillgrinding.description=Add a new Griding Ball for use in a Sag Mill with the given output multiplier, power multiplier, chance multiplier, and duration (in base power used).
groovyscript.wiki.enderio.sagmillgrinding.duration.value=Sets the amount of power used in recipes before the grinding ball is consumed
groovyscript.wiki.enderio.sagmillgrinding.chance.value=Sets the chance to double all outputs in recipes with an applicable bonusType
groovyscript.wiki.enderio.sagmillgrinding.grinding.value=Sets the chance to increase outputs up to 100% with an applicable bonusType
groovyscript.wiki.enderio.sagmillgrinding.power.value=Sets the power multiplier to recipes processed with the grinding ball
groovyscript.wiki.enderio.sagmillgrinding.remove=Removes the Grinding Ball item

groovyscript.wiki.enderio.slicensplice.title=Slice N Splice
groovyscript.wiki.enderio.slicensplice.description=Convert up to 6 input itemstacks into an output itemstack, using energy and giving XP.
groovyscript.wiki.enderio.slicensplice.add=Adds recipes in the format `output`, `input`, `energy`
groovyscript.wiki.enderio.slicensplice.xp.value=Sets the experience gained by taking the output item out of the Slice N Splice
groovyscript.wiki.enderio.slicensplice.energy.value=Sets the energy cost of the recipe

groovyscript.wiki.enderio.soulbinder.title=Soulbinder
groovyscript.wiki.enderio.soulbinder.description=Converts an input itemstack into an output itemstack, requiring one of several entities in soul vials, using energy and giving XP. Must have a unique name. To function properly, the input entities must be allowed in Soul Vials.
groovyscript.wiki.enderio.soulbinder.entities.value=Sets the valid entities. Entities must be allowed in Soul Vials
groovyscript.wiki.enderio.soulbinder.name.value=Sets the unique identifier of the recipe
groovyscript.wiki.enderio.soulbinder.energy.value=Sets the energy cost of the recipe
groovyscript.wiki.enderio.soulbinder.xp.value=Sets the experience levels required to start the recipe

groovyscript.wiki.enderio.tank.title=Tank
groovyscript.wiki.enderio.tank.description=Converts an input itemstack into an output fluidstack with an optional output itemstack in drain mode, or converts an input itemstack and fluidstack into an output itemstack in fill mode.
groovyscript.wiki.enderio.tank.addFill0=Adds fill recipes in the format `input`, `inputFluid`, `output`, and autogenerates a recipe name
groovyscript.wiki.enderio.tank.addFill1=Adds fill recipes in the format `recipeName`, `input`, `inputFluid`, `output`
groovyscript.wiki.enderio.tank.addDrain0=Adds drain recipes in the format `input`, `outputFluid`, `output`, and autogenerates a recipe name
groovyscript.wiki.enderio.tank.addDrain1=Adds drain recipes in the format `recipeName`, `input`, `outputFluid`, `output`
groovyscript.wiki.enderio.tank.isFilling.value=Sets if the recipe is filling or emptying
groovyscript.wiki.enderio.tank.removeFill0=Removes fill recipe by `input`, `fluid`
groovyscript.wiki.enderio.tank.removeFill1=Removes fill recipe by `fluid`, `output`
groovyscript.wiki.enderio.tank.removeDrain0=Removes drain recipe by `input`, `fluid`
groovyscript.wiki.enderio.tank.removeDrain1=Removes drain recipe by `fluid`, `output`

groovyscript.wiki.enderio.vat.title=Vat
groovyscript.wiki.enderio.vat.description=Converts an input fluidstack into an output itemstack at a rate based on up 2 itemstack inputs, and using power. Can be set to require at least NORMAL or ENHANCED tiers, or to IGNORE the tier. NORMAL and IGNORE are effectively the same.
groovyscript.wiki.enderio.vat.multipliers1.value=Sets the multiplier applied to the respective input item on the left side
groovyscript.wiki.enderio.vat.output.value=Sets the output fluid
groovyscript.wiki.enderio.vat.input.value=Sets the input fluid
groovyscript.wiki.enderio.vat.itemInputs1.value=Sets the valid input items for the left side
groovyscript.wiki.enderio.vat.itemInputs2.value=Sets the valid input items for the right side
groovyscript.wiki.enderio.vat.multipliers2.value=Sets the multiplier applied to the respective input item on the right side
groovyscript.wiki.enderio.vat.baseMultiplier.value=Sets the base amount of fluid output
groovyscript.wiki.enderio.vat.energy.value=Sets the energy cost of the recipe

# EvilCraft
groovyscript.wiki.evilcraft.bloodinfuser.title=Blood Infuser
groovyscript.wiki.evilcraft.bloodinfuser.description=Consumes an item, some fluid, and requires a given tier of Promise of Tenacity to produce the output and some experience after a duration.
groovyscript.wiki.evilcraft.bloodinfuser.tier.value=Sets the tier of the recipe, determined by the Promise of Tenacity contained within the upgrade slots of the machine
groovyscript.wiki.evilcraft.bloodinfuser.duration.value=Sets the base time in ticks the recipe takes to process
groovyscript.wiki.evilcraft.bloodinfuser.xp.value=Sets the experience gained by taking the output item out of the Blood Infuser

groovyscript.wiki.evilcraft.environmentalaccumulator.title=Environmental Accumulator
groovyscript.wiki.evilcraft.environmentalaccumulator.description=Consumes an item to give an output, possibly changing the weather. Has a cooldown time or a blood cost.
groovyscript.wiki.evilcraft.environmentalaccumulator.processingspeed.value=Sets how fast the item visually rotates while crafting
groovyscript.wiki.evilcraft.environmentalaccumulator.cooldowntime.value=Sets the time in ticks required before another recipe can be run in this Environmental Accumulator. Also controls the amount of `fluid('evilcraftblood')` consumed by the Sanguinary Environmental Accumulator
groovyscript.wiki.evilcraft.environmentalaccumulator.duration.value=Sets the base time in ticks the recipe takes to process
groovyscript.wiki.evilcraft.environmentalaccumulator.inputWeather.value=Sets the weather type required to start the recipe
groovyscript.wiki.evilcraft.environmentalaccumulator.outputWeather.value=Sets the weather type the world is changed to when the recipe is completed

# Extended Crafting
groovyscript.wiki.extendedcrafting.combinationcrafting.title=Combination Crafting
groovyscript.wiki.extendedcrafting.combinationcrafting.description=Converts one main item and any number of additional items into an output itemstack, with a configurable rf cost and consumption per tick amount.
groovyscript.wiki.extendedcrafting.combinationcrafting.note0=By default, there are no Combination recipes
groovyscript.wiki.extendedcrafting.combinationcrafting.add0=Adds recipes in the format `output`, `cost`, `input`, `pedestals`
groovyscript.wiki.extendedcrafting.combinationcrafting.add1=Adds recipes in the format `output`, `cost`, `perTick`, `input`, `pedestals`
groovyscript.wiki.extendedcrafting.combinationcrafting.cost.value=Sets the amount of RF required to complete the craft
groovyscript.wiki.extendedcrafting.combinationcrafting.pedestals.value=Sets the required items on nearby pedestals
groovyscript.wiki.extendedcrafting.combinationcrafting.perTick.value=Sets the maximum amount of RF consumed per tick until the entire cost is paid

groovyscript.wiki.extendedcrafting.compressioncrafting.title=Compression Crafting
groovyscript.wiki.extendedcrafting.compressioncrafting.description=Converts any number of a single item into an output itemstack, with a configurable rf cost, consumption per tick amount, catalyst, and if the catalyst is consumed.
groovyscript.wiki.extendedcrafting.compressioncrafting.add0=Adds recipes in the format `output`, `input`, `inputCount`, `catalyst`, `consumeCatalyst`, `powerCost`
groovyscript.wiki.extendedcrafting.compressioncrafting.add1=Adds recipes in the format `output`, `input`, `inputCount`, `catalyst`, `consumeCatalyst`, `powerCost`, `powerRate`
groovyscript.wiki.extendedcrafting.compressioncrafting.catalyst.value=Sets the catalyst item for the recipe
groovyscript.wiki.extendedcrafting.compressioncrafting.consumeCatalyst.value=Sets if the catalyst item is consumed when the recipe completes
groovyscript.wiki.extendedcrafting.compressioncrafting.input.value=Sets the input item or oredict required
groovyscript.wiki.extendedcrafting.compressioncrafting.inputCount.value=Sets the quantity of input items required
groovyscript.wiki.extendedcrafting.compressioncrafting.powerCost.value=Sets the amount of RF required to complete the craft
groovyscript.wiki.extendedcrafting.compressioncrafting.powerRate.value=Sets the maximum amount of RF consumed per tick until the entire cost is paid

groovyscript.wiki.extendedcrafting.endercrafting.title=Ender Crafting
groovyscript.wiki.extendedcrafting.endercrafting.description=A normal crafting recipe, with the recipe being slowly crafted based on nearby Ender Alternators.
groovyscript.wiki.extendedcrafting.endercrafting.addShaped0=Adds a shaped crafting recipe in the format `output`, `input`
groovyscript.wiki.extendedcrafting.endercrafting.addShaped1=Adds a shaped crafting recipe in the format `time`, `output`, `input`
groovyscript.wiki.extendedcrafting.endercrafting.addShapeless0=Adds a shapeless crafting recipe in the format `output`, `input`
groovyscript.wiki.extendedcrafting.endercrafting.addShapeless1=Adds a shapeless crafting recipe in the format `time`, `output`, `input`
groovyscript.wiki.extendedcrafting.endercrafting.time.value=Sets the duration in seconds for the recipe, reduced by each Ender Accelerator

groovyscript.wiki.extendedcrafting.tablecrafting.title=Table Crafting
groovyscript.wiki.extendedcrafting.tablecrafting.description=A normal crafting recipe, but requiring either a specific tier, or at least a given tier, from 3x3 to 9x9.
groovyscript.wiki.extendedcrafting.tablecrafting.addShaped0=Adds a shaped crafting recipe in the format `output`, `input`
groovyscript.wiki.extendedcrafting.tablecrafting.addShaped1=Adds a shaped crafting recipe in the format `tier`, `output`, `input`
groovyscript.wiki.extendedcrafting.tablecrafting.addShapeless0=Adds a shapeless crafting recipe in the format `output`, `input`
groovyscript.wiki.extendedcrafting.tablecrafting.addShapeless1=Adds a shapeless crafting recipe in the format `tier`, `output`, `input`
groovyscript.wiki.extendedcrafting.tablecrafting.tier.value=Sets the tier of table required, with 0 indicating any table size that can fit the recipe

# Immersive Engineering
groovyscript.wiki.immersiveengineering.alloykiln.title=Alloy Kiln
groovyscript.wiki.immersiveengineering.alloykiln.description=Converts two input itemstacks into an output itemstack, consuming fuel (based on burn time).
groovyscript.wiki.immersiveengineering.alloykiln.add=Adds recipes in the format `output`, `input0`, `input1`, `time`
groovyscript.wiki.immersiveengineering.alloykiln.time.value=Sets the time in ticks the recipe takes to process

groovyscript.wiki.immersiveengineering.arcfurnace.title=Arc Furnace
groovyscript.wiki.immersiveengineering.arcfurnace.description=Converts 1 input itemstack with up to 4 additional inputs into an output itemstack and an optional 'slag' itemstack, taking time and using rf power.
groovyscript.wiki.immersiveengineering.arcfurnace.add=Adds recipes in the format `output`, `input`, `additives`, `slag`, `time`, `energyPerTick`
groovyscript.wiki.immersiveengineering.arcfurnace.energyPerTick.value=Sets the amount of power consumed per tick
groovyscript.wiki.immersiveengineering.arcfurnace.mainInput.value=Sets the item input
groovyscript.wiki.immersiveengineering.arcfurnace.slag.value=Sets the item output as slag
groovyscript.wiki.immersiveengineering.arcfurnace.specialRecipeType.value=Sets the special recipe type. Default options are `Alloying`, `Ores`, and `Recycling`
groovyscript.wiki.immersiveengineering.arcfurnace.time.value=Sets the time in ticks the recipe takes to process

groovyscript.wiki.immersiveengineering.blastfurnace.title=Blast Furnace
groovyscript.wiki.immersiveengineering.blastfurnace.description=Converts an input itemstack into an output itemstack and an optional 'slag' itemstack, taking time and consuming fuel (based on Blast Furnace Fuels).
groovyscript.wiki.immersiveengineering.blastfurnace.add=Adds recipes in the format `output`, `input`, `time`, `slag`
groovyscript.wiki.immersiveengineering.blastfurnace.slag.value=Sets the item output as slag
groovyscript.wiki.immersiveengineering.blastfurnace.time.value=Sets the time in ticks the recipe takes to process

groovyscript.wiki.immersiveengineering.blastfurnacefuel.title=Blast Furnace Fuel
groovyscript.wiki.immersiveengineering.blastfurnacefuel.description=Allows an item to be used in the Blast Furnace as a fuel for the given number of ticks.
groovyscript.wiki.immersiveengineering.blastfurnacefuel.add=Adds recipes in the format `input`, `time`
groovyscript.wiki.immersiveengineering.blastfurnacefuel.time.value=Sets the time in ticks the recipe takes to process

groovyscript.wiki.immersiveengineering.blueprintcrafting.title=Blueprint Crafting (Blueprint)
groovyscript.wiki.immersiveengineering.blueprintcrafting.description=Converts any number of input itemstacks into an output itemstack, using a blueprint with the category nbt tag as a catalyst.
groovyscript.wiki.immersiveengineering.blueprintcrafting.add=Adds recipes in the format `output`, `input`, `fluidInput`
groovyscript.wiki.immersiveengineering.blueprintcrafting.category.value=Sets the required blueprint. Default blueprint options are `components`, `molds`, `bullet`, `specialBullet`, and `electrode`
groovyscript.wiki.immersiveengineering.blueprintcrafting.removeByCategory=Default blueprint categories are `components`, `molds`, `bullet`, `specialBullet`, and `electrode`
groovyscript.wiki.immersiveengineering.blueprintcrafting.streamRecipesByCategory=Default blueprint categories are `components`, `molds`, `bullet`, `specialBullet`, and `electrode`

groovyscript.wiki.immersiveengineering.bottlingmachine.title=Bottling Machine (Bottling)
groovyscript.wiki.immersiveengineering.bottlingmachine.description=Converts an input itemstack and fluidstack into an output itemstack.
groovyscript.wiki.immersiveengineering.bottlingmachine.add=Adds recipes in the format `output`, `input`, `fluidInput`

groovyscript.wiki.immersiveengineering.cokeoven.title=Coke Oven
groovyscript.wiki.immersiveengineering.cokeoven.description=Converts an input itemstack into an output itemstack over time, producing a given amount of creosote oil.
groovyscript.wiki.immersiveengineering.cokeoven.add=Adds recipes in the format `output`, `input`, `time`, `creosoteOutput`
groovyscript.wiki.immersiveengineering.cokeoven.creosote.value=Sets the amount of Creosote Oil output
groovyscript.wiki.immersiveengineering.cokeoven.time.value=Sets the time in ticks the recipe takes to process

groovyscript.wiki.immersiveengineering.crusher.title=Crusher
groovyscript.wiki.immersiveengineering.crusher.description=Converts an input itemstack into an output itemstack, consuming energy.
groovyscript.wiki.immersiveengineering.crusher.add=Adds recipes in the format `output`, `input`, `energy`
groovyscript.wiki.immersiveengineering.crusher.energy.value=Sets the amount of power consumed to complete the recipe

groovyscript.wiki.immersiveengineering.excavator.title=Excavator
groovyscript.wiki.immersiveengineering.excavator.description=Adds a Mineral Mix with the given name, weight, fail chance, ores, and allowed dimensions. A Mineral Mix can be mined by an Excavator Multiblock and scanned via a Core Sample Drill.
groovyscript.wiki.immersiveengineering.excavator.note0=Reloading will not change chunks already 'discovered'
groovyscript.wiki.immersiveengineering.excavator.add=Adds entries in the format `name`, `mineralWeight`, `failChance`, `ores`, `chances`
groovyscript.wiki.immersiveengineering.excavator.blacklist.value=Sets if the `dimensions` property indicates allowed dimensions (false) or blocked dimensions (true)
groovyscript.wiki.immersiveengineering.excavator.chances.value=Sets the chance a given block output will contain the corresponding entry in ores
groovyscript.wiki.immersiveengineering.excavator.dimensions.value=Sets the list of dimension ids the vein can generate in (if `blacklist` is false) or are prevented from generating in (if `blacklist` is true)
groovyscript.wiki.immersiveengineering.excavator.fail.value=Sets the chance that a given mining attempt with output nothing instead of an ore
groovyscript.wiki.immersiveengineering.excavator.name.value=Sets the unique name of the vein
groovyscript.wiki.immersiveengineering.excavator.ores.value=Sets the valid oredicts output
groovyscript.wiki.immersiveengineering.excavator.weight.value=Sets the weight the Mineral Mix has to spawn in its allowed dimensions
groovyscript.wiki.immersiveengineering.excavator.removeByMineral=Removes the Mineral Mix entry with the given name
groovyscript.wiki.immersiveengineering.excavator.removeByOres=Removes all Mineral Mix entries containing any of the given ores

groovyscript.wiki.immersiveengineering.fermenter.title=Fermenter
groovyscript.wiki.immersiveengineering.fermenter.description=Converts an input itemstack into an output fluidstack with an optional output itemstack, consuming power.
groovyscript.wiki.immersiveengineering.fermenter.add=Adds recipes in the format `fluidOutput`, `itemOutput`, `input`, `energy`
groovyscript.wiki.immersiveengineering.fermenter.energy.value=Sets the amount of power consumed to complete the recipe

groovyscript.wiki.immersiveengineering.metalpress.title=Metal Press
groovyscript.wiki.immersiveengineering.metalpress.description=Converts an input itemstack into an output itemstack, with a mold catalyst, consuming power.
groovyscript.wiki.immersiveengineering.metalpress.add=Adds recipes in the format `output`, `input`, `mold`, `energy`
groovyscript.wiki.immersiveengineering.metalpress.energy.value=Sets the amount of power consumed to complete the recipe
groovyscript.wiki.immersiveengineering.metalpress.mold.value=Sets the mold item placed on the top face of the Metal Press as a catalyst
groovyscript.wiki.immersiveengineering.metalpress.removeByInput=Removes recipes with the given mold and input item, in the format `mold`, `input`
groovyscript.wiki.immersiveengineering.metalpress.removeByMold=Removes all recipes with the given mold
groovyscript.wiki.immersiveengineering.metalpress.removeByOutput=Removes recipes with the given mold and output item, in the format `mold`, `output`

groovyscript.wiki.immersiveengineering.mixer.title=Mixer
groovyscript.wiki.immersiveengineering.mixer.description=Converts any number of input itemstacks and a fluidstack into an output fluidstack, consuming power.
groovyscript.wiki.immersiveengineering.mixer.add=Adds recipes in the format `fluidOutput`, `fluidInput`, `energy`, `itemInput`
groovyscript.wiki.immersiveengineering.mixer.energy.value=Sets the amount of power consumed to complete the recipe

groovyscript.wiki.immersiveengineering.refinery.title=Refinery
groovyscript.wiki.immersiveengineering.refinery.description=Converts 2 input fluidstacks into an output fluidstack, consuming power.
groovyscript.wiki.immersiveengineering.refinery.add=Adds recipes in the format `output`, `input0`, `input1`, `energy`
groovyscript.wiki.immersiveengineering.refinery.energy.value=Sets the amount of power consumed to complete the recipe

groovyscript.wiki.immersiveengineering.squeezer.title=Squeezer
groovyscript.wiki.immersiveengineering.squeezer.description=Converts an input itemstack into either an output itemstack, fluidstack, or both, using energy.
groovyscript.wiki.immersiveengineering.squeezer.add=Adds recipes in the format `fluidOutput`, `itemOutput`, `input`, `energy`
groovyscript.wiki.immersiveengineering.squeezer.energy.value=Sets the amount of power consumed to complete the recipe

# Mekanism
groovyscript.wiki.mekanism.gasInput.value=Sets the gas inputs of the recipe
groovyscript.wiki.mekanism.gasOutput.value=Sets the gas outputs of the recipe

groovyscript.wiki.mekanism.chemicalinfuser.title=Chemical Infuser
groovyscript.wiki.mekanism.chemicalinfuser.description=Combines two input gas stacks into a output gas stack.
groovyscript.wiki.mekanism.chemicalinfuser.add=Adds recipes in the format `leftInput`, `rightInput`, `output`

groovyscript.wiki.mekanism.chemicaloxidizer.title=Chemical Oxidizer (Oxidizer)
groovyscript.wiki.mekanism.chemicaloxidizer.description=Converts an input itemstack into an output gasstack.
groovyscript.wiki.mekanism.chemicaloxidizer.add=Adds recipes in the format `ingredient`, `output`

groovyscript.wiki.mekanism.combiner.title=Combiner
groovyscript.wiki.mekanism.combiner.description=Combines an input itemstack with an extra itemstack to create an output itemstack.
groovyscript.wiki.mekanism.combiner.add=Adds recipes in the format `ingredient`, `extra`, `output`
groovyscript.wiki.mekanism.combiner.extra.value=Sets the extra input item, defaults to Cobblestone

groovyscript.wiki.mekanism.crusher.title=Crusher
groovyscript.wiki.mekanism.crusher.description=Converts an input itemstack into an output itemstack.
groovyscript.wiki.mekanism.crusher.add=Adds recipes in the format `ingredient`, `output`

groovyscript.wiki.mekanism.crystallizer.title=Crystallizer
groovyscript.wiki.mekanism.crystallizer.description=Converts an input gasstack into an output itemstack.
groovyscript.wiki.mekanism.crystallizer.add=Adds recipes in the format `input`, `output`

groovyscript.wiki.mekanism.dissolutionchamber.title=Dissolution Chamber (Dissolver)
groovyscript.wiki.mekanism.dissolutionchamber.description=Converts an input itemstack into an output gasstack at the cost of 100mb of Sulfuric Acid.
groovyscript.wiki.mekanism.dissolutionchamber.add=Adds recipes in the format `ingredient`, `output`

groovyscript.wiki.mekanism.electrolyticseparator.title=Electrolytic Separator (Separator)
groovyscript.wiki.mekanism.electrolyticseparator.description=Converts an input fluid into two output gasstacks at the cost of power.
groovyscript.wiki.mekanism.electrolyticseparator.add=Adds recipes in the format `ingredient`, `output`

groovyscript.wiki.mekanism.enrichmentchamber.title=Enrichment Chamber (Enricher)
groovyscript.wiki.mekanism.enrichmentchamber.description=Converts an input itemstack into an output itemstack.
groovyscript.wiki.mekanism.enrichmentchamber.add=Adds recipes in the format `input`, `leftOutput`, `rightOutput`, `energy`

groovyscript.wiki.mekanism.infusion.title=Infusion
groovyscript.wiki.mekanism.infusion.description=Add new infusion types and itemstacks to those types.
groovyscript.wiki.mekanism.infusion.note0=To register a texture to be used by an Infusion Type, you have to add the following event listener to a PreInit file. `event_manager.listen { TextureStitchEvent.Pre event -> event.getMap().registerSprite(resource('placeholdername:blocks/example')) }`, where 'assets/placeholdername/textures/blocks/example.png' is the location of the desired texture.
groovyscript.wiki.mekanism.infusion.addType=Creates an Infusion Type with the given name and texture
groovyscript.wiki.mekanism.infusion.removeType=Removes an Infusion Type and all corresponding items
groovyscript.wiki.mekanism.infusion.add=Adds IIngredients to the provided Infusion Type
groovyscript.wiki.mekanism.infusion.remove=Removes IIngredients from any Infusion Type
groovyscript.wiki.mekanism.infusion.removeByType=Removes any Infusion Type that matches the given type
groovyscript.wiki.mekanism.infusion.removeAll=Removes all Infusion Types

groovyscript.wiki.mekanism.injectionchamber.title=Injection Chamber (Injector)
groovyscript.wiki.mekanism.injectionchamber.description=Converts an input itemstack and 200 of a gasstack into an output itemstack.
groovyscript.wiki.mekanism.injectionchamber.annotation=Always uses 200 gas
groovyscript.wiki.mekanism.injectionchamber.add=Adds recipes in the format `ingredient`, `gasInput`, `output`

groovyscript.wiki.mekanism.metallurgicinfuser.title=Metallurgic Infuser
groovyscript.wiki.mekanism.metallurgicinfuser.description=Converts and input itemstack and a varible amount of an infusion type into an output itemstack.
groovyscript.wiki.mekanism.metallurgicinfuser.add0=Adds recipes in the format `ingredient`, `infuseType`, `infuseAmount`, `output`
groovyscript.wiki.mekanism.metallurgicinfuser.add1=Adds recipes in the format `ingredient`, `infuseType`, `infuseAmount`, `output`
groovyscript.wiki.mekanism.metallurgicinfuser.infuse.value=Sets the Infusion type the recipe uses
groovyscript.wiki.mekanism.metallurgicinfuser.amount.value=Sets the amount of the provided Infusion type consumed

groovyscript.wiki.mekanism.osmiumcompressor.title=Osmium Compressor
groovyscript.wiki.mekanism.osmiumcompressor.description=Converts an input itemstack and 200 of a gasstack into an output itemstack. By default, will use Liquid Osmium as the gasstack.
groovyscript.wiki.mekanism.osmiumcompressor.annotation=Always uses 200 gas
groovyscript.wiki.mekanism.osmiumcompressor.add=Adds recipes in the format `ingredient`, `gasInput`, `output`

groovyscript.wiki.mekanism.pressurizedreactionchamber.title=Pressurized Reaction Chamber (PRC)
groovyscript.wiki.mekanism.pressurizedreactionchamber.description=Converts an input fluidstack, gasstack, and optional itemstack into an output gasstack and optional itemstack.
groovyscript.wiki.mekanism.pressurizedreactionchamber.add=Adds recipes in the format `ingredient`, `gasInput`, `output`

groovyscript.wiki.mekanism.purificationchamber.title=Purification Chamber (Purifier)
groovyscript.wiki.mekanism.purificationchamber.description=Converts an input itemstack and gasstack into an output itemstack.
groovyscript.wiki.mekanism.purificationchamber.add=Adds recipes in the format `ingredient`, `output`, `secondary`, `chance`

groovyscript.wiki.mekanism.sawmill.title=Sawmill
groovyscript.wiki.mekanism.sawmill.description=Converts an input itemstack into an output itemstack, with an optional additional output.
groovyscript.wiki.mekanism.sawmill.add0=Adds recipes in the format `ingredient`, `output`
groovyscript.wiki.mekanism.sawmill.add1=Adds recipes in the format `ingredient`, `output`, `secondary`
groovyscript.wiki.mekanism.sawmill.add2=Adds recipes in the format `ingredient`, `output`, `secondary`, `chance`
groovyscript.wiki.mekanism.sawmill.extra.value=Sets the extra itemstack produced by the recipe
groovyscript.wiki.mekanism.sawmill.chance.value=Sets the chance the extra itemstack has to be produced

groovyscript.wiki.mekanism.smelting.title=Smelting (Smelter)
groovyscript.wiki.mekanism.smelting.description=Converts an input itemstack into an output itemstack in a recipe exclusive to the Smelter. Overrides the default furnace recipe, if applicable.
groovyscript.wiki.mekanism.smelting.note0=Recipes exclusive to the Mekanism Smelter may not be displayed in JEI

groovyscript.wiki.mekanism.solarneutronactivator.title=Solar Neutron Activator (SNA)
groovyscript.wiki.mekanism.solarneutronactivator.description=Converts an input gasstack into an output gasstack while exposed to the sun.
groovyscript.wiki.mekanism.solarneutronactivator.add=Adds recipes in the format `input`, `output`

groovyscript.wiki.mekanism.thermalevaporationplant.title=Thermal Evaporation Plant (Thermal Evaporation, TEP)
groovyscript.wiki.mekanism.thermalevaporationplant.description=Converts an input fluidstack into an output fluidstack over time based on multiblock temperature.
groovyscript.wiki.mekanism.thermalevaporationplant.add=Adds recipes in the format `input`, `output`

groovyscript.wiki.mekanism.washer.title=Washer
groovyscript.wiki.mekanism.washer.description=Converts an input gasstack into an output gasstack at the cost of 5mb of water.
groovyscript.wiki.mekanism.washer.add=Adds recipes in the format `input`, `output`

# Roots
groovyscript.wiki.roots.animalharvest.title=Animal Harvest
groovyscript.wiki.roots.animalharvest.description=Animal Harvest is a ritual that drops items from nearby mob's based on that mobs loottable without harming the mob. Only applies to allowed mobs.
groovyscript.wiki.roots.animalharvest.entity.value=Sets the target entity
groovyscript.wiki.roots.animalharvest.removeByEntity=Removes any Animal Harvest recipe with the given entity
groovyscript.wiki.roots.animalharvest.removeByName=Removes the Animal Harvest recipe with the given name

groovyscript.wiki.roots.animalharvestfish.title=Animal Harvest Fish
groovyscript.wiki.roots.animalharvestfish.description=Animal Harvest Fish is another effect of the Animal Harvest ritual that applies if there are water source blocks within the ritual range.
groovyscript.wiki.roots.animalharvestfish.weight.value=Sets the weight of the recipe to generate
groovyscript.wiki.roots.animalharvestfish.removeByFish=Removes any Animal Harvest Fish recipe with the given fish output
groovyscript.wiki.roots.animalharvestfish.removeByName=Removes the Animal Harvest Fish recipe with the given name
groovyscript.wiki.roots.animalharvestfish.removeByOutput=Removes any Animal Harvest Fish recipe with the given output

groovyscript.wiki.roots.barkcarving.title=Bark Carving
groovyscript.wiki.roots.barkcarving.description=Bark Carving is a special set of alternate drops for blocks when broken with an item containing the tool type 'knife'. Amount dropped is up to 2 + fortune/looting level higher than the set amount.
groovyscript.wiki.roots.barkcarving.removeByBlock=Removes the Bark Carving recipe with the given input itemstack
groovyscript.wiki.roots.barkcarving.removeByInput=Removes the Bark Carving recipe with the given input itemstack
groovyscript.wiki.roots.barkcarving.removeByName=Removes the Bark Carving recipe with the given name
groovyscript.wiki.roots.barkcarving.removeByOutput=Removes the Bark Carving recipe with the given output itemstack

groovyscript.wiki.roots.chrysopoeia.title=Chrysopoeia
groovyscript.wiki.roots.chrysopoeia.description=Chrysopoeia is a spell that transmutes items held in the main hand.
groovyscript.wiki.roots.chrysopoeia.removeByInput=Removes the Chrysopoeia recipe with the given input itemstack
groovyscript.wiki.roots.chrysopoeia.removeByName=Removes the Chrysopoeia recipe with the given name
groovyscript.wiki.roots.chrysopoeia.removeByOutput=Removes the Chrysopoeia recipe with the given output itemstack

groovyscript.wiki.roots.feycrafter.title=Fey Crafter
groovyscript.wiki.roots.feycrafter.description=The Fey Crafter is a crafting mechanism that requires an activated Grove Stone nearby to take 5 item inputs and return an item output.
groovyscript.wiki.roots.feycrafter.note= When reloading recipes with the Fey Crafter, you may encounter a `ConcurrentModificationException`!
groovyscript.wiki.roots.feycrafter.xp.value=Sets the amount of experience output when completing the recipe
groovyscript.wiki.roots.feycrafter.removeByName=Removes the Fey Crafter recipe with the given name
groovyscript.wiki.roots.feycrafter.removeByOutput=Removes the Fey Crafter recipe with the given output itemstack

groovyscript.wiki.roots.flowergeneration.title=Flower Generation
groovyscript.wiki.roots.flowergeneration.description=When running the Flower Growth Ritual, allowed flowers will generate in the area. Additionally, using the spell Growth Infusion's Floral Reproduction modifier will duplicate the flower.
groovyscript.wiki.roots.flowergeneration.flower.value=Sets the flower blockstate
groovyscript.wiki.roots.flowergeneration.removeByFlower0=Removes the Flower Generation entry with the given IBlockState
groovyscript.wiki.roots.flowergeneration.removeByFlower1=Removes the Flower Generation entry with the given Block and int metadata
groovyscript.wiki.roots.flowergeneration.removeByFlower2=Removes all Flower Generation entries with the given Block
groovyscript.wiki.roots.flowergeneration.removeByFlower3=Removes the Flower Generation entry with the given ItemStack converted into an IBlockState
groovyscript.wiki.roots.flowergeneration.removeByName=Removes the Flower Generation entry with the given name

groovyscript.wiki.roots.lifeessence.title=Life Essence
groovyscript.wiki.roots.lifeessence.description=When shift right clicking a mob in the Life Essence Pool with Runic Shears, it will drop a Life-Essence, which allows that mob to be spawned via the Creature Summoning ritual.
groovyscript.wiki.roots.lifeessence.add=Adds entries in the format `entity`
groovyscript.wiki.roots.lifeessence.remove=Removes the Life Essence entry for the given Entity

groovyscript.wiki.roots.modifiers.title=Modifiers
groovyscript.wiki.roots.modifiers.description=Controls what spell modifiers are enabled and can be used.
groovyscript.wiki.roots.modifiers.enable0=Enable any disabled modifiers with the given string as a resource location, defaulting to a namespace of `roots` if not provided
groovyscript.wiki.roots.modifiers.enable1=Enable any disabled modifiers with the given resource location
groovyscript.wiki.roots.modifiers.enable2=Enable the disabled modifier
groovyscript.wiki.roots.modifiers.enable3=Enable all disabled modifiers for the given spell
groovyscript.wiki.roots.modifiers.enableAll=Enable all disabled modifiers
groovyscript.wiki.roots.modifiers.disable0=Disable any enabled modifiers with the given string as a resource location, defaulting to a namespace of `roots` if not provided
groovyscript.wiki.roots.modifiers.disable1=Disable any enabled modifiers with the given resource location
groovyscript.wiki.roots.modifiers.disable2=Disable the enabled modifier
groovyscript.wiki.roots.modifiers.disable3=Disable all enabled modifiers for the given spell
groovyscript.wiki.roots.modifiers.disableAll=Disable all enabled modifiers

groovyscript.wiki.roots.mortar.title=Mortar And Pestle
groovyscript.wiki.roots.mortar.description=When right clicking a mortar containing the input items with a pestle, it will display a few colored sparkles, consume the inputs, and drop the item output.
groovyscript.wiki.roots.mortar.blue1.value=Sets the blue color value of the first version of the particle spawned
groovyscript.wiki.roots.mortar.red2.value=Sets the red color value of the second version of the particle spawned
groovyscript.wiki.roots.mortar.red1.value=Sets the red color value of the first version of the particle spawned
groovyscript.wiki.roots.mortar.green2.value=Sets the green color value of the second version of the particle spawned
groovyscript.wiki.roots.mortar.green1.value=Sets the green color value of the first version of the particle spawned
groovyscript.wiki.roots.mortar.generate.value=Sets if, when input has a single IIngredient, a recipe will be generated for each input amount
groovyscript.wiki.roots.mortar.blue2.value=Sets the blue color value of the second version of the particle spawned
groovyscript.wiki.roots.mortar.removeByName=Removes the Mortar recipe with the given name
groovyscript.wiki.roots.mortar.removeByOutput=Removes the Mortar recipe with the given output itemstack

groovyscript.wiki.roots.moss.title=Moss
groovyscript.wiki.roots.moss.description=Moss indicates a pair of items that can right click the input with a knife to turn it into the output and give a Terra Moss and right click the output with moss spores to turn it into the input.
groovyscript.wiki.roots.moss.add=Adds a new Moss conversion recipe in the format `in`, `out`
groovyscript.wiki.roots.moss.remove0=Removes the Moss conversion recipe for the given input and output itemstacks, in the format `in`, `out`
groovyscript.wiki.roots.moss.remove1=Removes the Moss conversion recipe for the given input itemstack

groovyscript.wiki.roots.pacifist.title=Pacifist
groovyscript.wiki.roots.pacifist.description=Pacifist is a list of entities which killing will give the player the advancement 'Untrue Pacifist'.
groovyscript.wiki.roots.pacifist.entity.value=Sets the target entity
groovyscript.wiki.roots.pacifist.removeByClass=Removes the Pacifist entry with the given Entity class
groovyscript.wiki.roots.pacifist.removeByEntity=Removes the Pacifist entry for the given Entity
groovyscript.wiki.roots.pacifist.removeByName=Removes the Pacifist entry with the given name

groovyscript.wiki.roots.predicates.title=Predicates
groovyscript.wiki.roots.predicates.description=Predicates are used in Transmution and RunicShearBlock. They either match all blockstates of a block, or all blockstates that have the given properties that match the input blockstate.
groovyscript.wiki.roots.predicates.below.value=Sets if the predicate checks the block below for validation
groovyscript.wiki.roots.predicates.above.value=Sets if the predicate checks the block above for validation
groovyscript.wiki.roots.predicates.blockstate.value=Sets the IBlockState compared against
groovyscript.wiki.roots.predicates.properties.value=Sets what properties of the blockstate are checked, where any properties not checked are
groovyscript.wiki.roots.predicates.above_or_below.required=Only at most one of either `above` or `below` may be true
groovyscript.wiki.roots.predicates.properties.required=Each property must be a valid property of the provided `blockstate`

groovyscript.wiki.roots.pyre.title=Pyre
groovyscript.wiki.roots.pyre.description=Converts 5 input items into the ouput after a period of time when the Pyre is lit on fire.
groovyscript.wiki.roots.pyre.burnTime.value=Sets the time in ticks for the recipe to process
groovyscript.wiki.roots.pyre.xp.value=Sets the XP given when the recipe finishes in levels
groovyscript.wiki.roots.pyre.removeByName=Removes the Pyre recipe with the given name
groovyscript.wiki.roots.pyre.removeByOutput=Removes the Pyre recipe with the given output itemstack

groovyscript.wiki.roots.rituals.title=Rituals
groovyscript.wiki.roots.rituals.description=Set the Pyre Ritual recipe and control all stats. Dump the modifiable stats into `roots.log` by running `/roots rituals`.
groovyscript.wiki.roots.rituals.ritual.value=Sets the ritual being modified
# TODO missing modifying rituals

groovyscript.wiki.roots.runicshearblock.title=Runic Shear Block
groovyscript.wiki.roots.runicshearblock.description=Right clicking a Runic Shear on a block to convert it into a replacement block and drop items.
groovyscript.wiki.roots.runicshearblock.state.value=Sets the target input blockstate
groovyscript.wiki.roots.runicshearblock.displayItem.value=Sets the item representing the target input blockstate
groovyscript.wiki.roots.runicshearblock.replacementState.value=Sets the blockstate replacing the input block
groovyscript.wiki.roots.runicshearblock.removeByName=Removes the Runic Shear Block recipe with the given name
groovyscript.wiki.roots.runicshearblock.removeByOutput=Removes the Runic Shear Block recipe with the given output itemstack
groovyscript.wiki.roots.runicshearblock.removeByState=Removes the Runic Shear Block recipe with the given output IBlockState

groovyscript.wiki.roots.runicshearentity.title=Runic Shear Entity
groovyscript.wiki.roots.runicshearentity.description=Right clicking a Runic Shear on an entity. The entity will have a cooldown, preventing spamming.
groovyscript.wiki.roots.runicshearentity.cooldown.value=Sets the time in ticks before the entity can be sheared again
groovyscript.wiki.roots.runicshearentity.entity.value=Sets the target entity
groovyscript.wiki.roots.runicshearentity.functionMap.value=Sets a function that takes an EntityLivingBase and returns an itemstack drop based on the entities properties
groovyscript.wiki.roots.runicshearentity.removeByEntity=Removes the Runic Shear Entity recipe for the given Entity
groovyscript.wiki.roots.runicshearentity.removeByName=Removes the Runic Shear Entity recipe with the given name
groovyscript.wiki.roots.runicshearentity.removeByOutput=Removes the Runic Shear Entity recipe for the given output itemstack

groovyscript.wiki.roots.spells.title=Spells
groovyscript.wiki.roots.spells.description=Controls the recipe for the given spell, the sound, all properties, the base cost, and each modifier's cost.
groovyscript.wiki.roots.spells.list.value=Sets a list of all cost types used to construct a complex Cost object
groovyscript.wiki.roots.spells.spell.value=Sets the spell being modified
# TODO missing modifying spells

groovyscript.wiki.roots.summoncreature.title=Summon Creature
groovyscript.wiki.roots.summoncreature.description=When running a Summon Creature Ritual, the input items placed on Catalyst Plate will summon the target entity.
groovyscript.wiki.roots.summoncreature.entity.value=Sets the target entity
groovyscript.wiki.roots.summoncreature.removeByEntity=Removes the Summon Creature recipe for the given Entity
groovyscript.wiki.roots.summoncreature.removeByName=Removes the Summon Creature recipe with the given name

groovyscript.wiki.roots.transmutation.title=Transmutation
groovyscript.wiki.roots.transmutation.description=When running the Transmutation, convert nearby blocks that match a set of conditions into either a block or items.
groovyscript.wiki.roots.transmutation.condition.value=Sets a condition for the input to be converted, typically indicating a specific block above or below
groovyscript.wiki.roots.transmutation.start.value=Sets the starting blockstate
groovyscript.wiki.roots.transmutation.state.value=Sets the output iblockstate
groovyscript.wiki.roots.transmutation.removeByInput=Removes the Transmutation recipe for the given input IBlockState
groovyscript.wiki.roots.transmutation.removeByName=Removes the Transmutation recipe with the given name
groovyscript.wiki.roots.transmutation.removeByOutput0=Removes the Transmutation recipe for the given output itemstack
groovyscript.wiki.roots.transmutation.removeByOutput1=Removes the Transmutation recipe for the given output IBlockState

